{
	"name": "AllEmp",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText9",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText10",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Union1"
				}
			],
			"script": "source(output(\n\t\tEmpno as string,\n\t\tEmpName as string,\n\t\tLocation as string,\n\t\tJob as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tEmpName as string,\n\t\tLocation as string,\n\t\tJob as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1 derive(dummy = 'dummy') ~> DerivedColumn1\nDerivedColumn1 aggregate(groupBy(dummy),\n\tmaxid = max(Empno)) ~> Aggregate1\nAggregate1, source2 join(1==1,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> Join1\nJoin1 keyGenerate(output(Empno as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 derive(Empno = toString(Empno+toInteger(maxid))) ~> DerivedColumn2\nDerivedColumn2 select(mapColumn(\n\t\tEmpno,\n\t\tEmpName,\n\t\tLocation,\n\t\tJob\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsource1, Select1 union(byName: true)~> Union1\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['StructuredData.Csv'],\n\tumask: 0022,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tName = Empno,\n\t\tEmpName,\n\t\tLocation,\n\t\tJob\n\t),\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}